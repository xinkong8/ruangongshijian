<launch>
    <arg name="use_gui" default="false"/>
    <arg name="use_rviz" default="false"/>
    <arg name="use_ekf" default="true"/>
    <arg name="nav_use_rotvel" default="false"/>
    <arg name="robot_type" default="PAVS" doc="robot_type [PAVS, PAVS_YDLIDAR]"/>
    <arg name="use_remote_control" default="false"/>
    <arg name="lidar_type" default="a1" doc="lidar_type [a1, ydlidar, velodyne, ls16]"/>
    <arg name="camera_type" default="none" doc="camera_type [astras, astrapro, astraproplus]" />

    <!-- 启动遥控器 -->
    <!-- Start remote control -->
    <include file="$(find remote_ctrl)/launch/pavs_joy.launch" if="$(arg use_remote_control)"/>
    
    <!-- 启动传感器 -->
    <!-- Start sensor -->
    <include file="$(find pavs_bringup)/launch/sensor_bringup.launch">
        <arg name="lidar_type" value="$(arg lidar_type)" doc="lidar_type [a1, ydlidar, velodyne, ls16]"/>
        <arg name="camera_type" value="$(arg camera_type)" doc="camera_type [astras, astrapro, astraproplus]" />
    </include>

    <!-- URDF模型 -->
    <!-- URDF model -->
    <group if="$(arg use_ekf)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder
            '$(find pavs_description)/urdf/pavs.urdf.xacro'" if="$(eval arg('robot_type') == 'PAVS')"/>
        <param name="robot_description" command="$(find xacro)/xacro --inorder
            '$(find pavs_description)/urdf/pavs.urdf_ydlidar.xacro'" if="$(eval arg('robot_type') == 'PAVS_YDLIDAR')"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"
            if="$(arg use_gui)"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"
            unless="$(arg use_gui)"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    </group>

    <group unless="$(arg use_ekf)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder
            '$(find pavs_bringup)/urdf/pavs.urdf.xacro'" if="$(eval arg('robot_type') == 'PAVS')"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"
            if="$(arg use_gui)"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"
            unless="$(arg use_gui)"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    </group>


    <!-- 底层驱动节点 -->
    <!-- Low-level driver node -->
    <node pkg="pavs_bringup" type="chassis_driver.py" name="driver_node" required="true" output="screen">
        <param name="car_type" type="string" value="$(eval arg('robot_type'))"/>
        <param name="xlinear_speed_limit" type="double" value="1.0"/>
        <param name="ylinear_speed_limit" type="double" value="1.0"/>
        <param name="angular_speed_limit" type="double" value="5.0"/>
        <param name="nav_use_rotvel" type="bool" value="$(arg nav_use_rotvel)"/>
        <param name="imu_link" type="string" value="imu_link"/>
        <remap from="/pub_vel" to="/vel_raw"/>
        <remap from="/pub_imu" to="/imu/imu_raw"/>
        <remap from="/pub_mag" to="/mag/mag_raw"/>
    </node>

    <!-- 发布里程计数据 -->
    <!-- Publish odometer data -->
    <node pkg="pavs_bringup" type="base_node" name="odometry_publisher" if="$(arg use_ekf)" output="screen">
        <param name="odom_frame" type="string" value="odom"/>
        <param name="base_footprint_frame" type="string" value="base_footprint"/>
        <param name="linear_scale_x" type="double" value="1.0"/>
        <param name="linear_scale_y" type="double" value="1.0"/>
        <param name="wheelbase" type="double" value="0.25"/>
        <param name="pub_odom_tf" type="bool" value="false"/>
        <remap from="/sub_vel" to="/vel_raw"/>
        <remap from="/pub_odom" to="/odom_raw"/>
        <!--remap from="/pub_odom" to="/odom"/-->
    </node>

    <node pkg="pavs_bringup" type="base_node" name="odometry_publisher" unless="$(arg use_ekf)" output="screen">
        <param name="odom_frame" type="string" value="odom"/>
        <param name="base_footprint_frame" type="string" value="base_footprint"/>
        <param name="linear_scale_x" type="double" value="1.0"/>
        <param name="linear_scale_y" type="double" value="1.0"/>
        <param name="wheelbase" type="double" value="0.25"/>
        <param name="pub_odom_tf" type="bool" value="true"/>
        <remap from="/sub_vel" to="/vel_raw"/>
        <remap from="/pub_odom" to="/odom"/>
        <!--remap from="/pub_odom" to="/odom"/-->
    </node>

    <!-- 过滤和融合imu数据 -->
    <!-- Filter and fuse imu data -->
    <!-- refer to https://github.com/CCNYRoboticsLab/imu_tools-->
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" if="$(arg use_ekf)">
        <param name="fixed_frame" value="base_link"/>
        <param name="use_mag" value="false"/>
        <param name="publish_tf" value="false"/>
        <param name="use_magnetic_field_msg" value="false"/>
        <param name="world_frame" value="enu"/>
        <param name="orientation_stddev" value="0.05"/>
        <param name="angular_scale" value="1.05"/>
        <!-- <remap from="/sub_imu" to="/imu/imu_raw"/>
        <remap from="/sub_mag" to="/mag/mag_raw"/> -->

        <!-- https://github.com/CCNYRoboticsLab/imu_tools/blob/noetic/imu_filter_madgwick/src/imu_filter_ros.cpp, line 134-158 -->
        <remap from="/imu/data_raw" to="/imu/imu_raw"/>
        <remap from="/imu/mag" to="/mag/mag_raw"/>

        <!-- https://github.com/CCNYRoboticsLab/imu_tools/blob/noetic/imu_filter_madgwick/src/imu_filter_ros.cpp, line 116-132 -->
        <!-- <remap from="/pub_imu" to="/imu/imu_data"/> -->
        <remap from="/imu/data" to="/imu/imu_data"/>
        <remap from="/pub_mag" to="/mag/mag_field"/>
        

    </node>

    <!-- 扩展卡尔曼数据融合 -->
    <!-- Extended Kalman data fusion -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen" if="$(arg use_ekf)">
        <remap from="odometry/filtered" to="odom"/>
        <remap from="/imu0" to="/imu/imu_data"/>
        <!-- <remap from="/imu0" to="/imu/imu_raw"/> -->
        <remap from="/odom0" to="odom_raw"/>
        <param name="odom_frame" value="/odom"/>
        <param name="world_frame" value="/odom"/>
        <param name="base_link_frame" value="/base_footprint"/>
        <rosparam command="load" file="$(find pavs_bringup)/param/robot_localization.yaml"/>
    </node>

    <!-- rviz -->
    <node pkg="rviz" type="rviz" name="odom_rviz" required="true"
          args="-d $(find pavs_bringup)/rviz/odom.rviz" if="$(arg use_rviz)"/>
</launch>
